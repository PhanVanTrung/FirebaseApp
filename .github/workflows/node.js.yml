# https://vitejs.dev/guide/static-deploy.html#github-pages
# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy VueJS Project
# env: |
#   API_KEY: ${{ secrets.API_KEY }}
#   AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
#   DATABASE_URL: ${{ secrets.DATABASE_URL }}
#   PROJECT_ID: ${{ secrets.PROJECT_ID }}
#   STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
#   MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
#   APP_ID: ${{ secrets.APP_ID }}
#   MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
on:
  push:
    branches: [ "main" , "PhanVanTrung-patch-1"]
  pull_request:
    branches: [ "main" , "PhanVanTrung-patch-1" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Install tar
      run: sudo apt-get update && sudo apt-get install tar
    - name: Check tar installation
      run: tar --version
    - uses: actions/checkout@v4

    - name: Replace string in file
      uses: MathieuSoysal/replace-string-in-file@v1.0.0
      with:
        file: firebaseConfig.json
        old-string: env.secrets.API_KEY
        new-string: ${{ secrets.API_KEY }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      # with:
      #   node-version: ${{ matrix.node-version }}
      #   cache: 'npm'
    - name: Install Dependencies
      # working-directory: ./vuetify-project
      run: npm install
    - name: Build App
      # working-directory: ./vuetify-project
      run: npm run build --if-present --base=/FirebaseApp/

    # - name: Archive artifact
    #   shell: sh
    #   run: |
    #     tar \
    #       --dereference --hard-dereference \
    #       -cvf "$RUNNER_TEMP/artifact.tar" \
    #       --exclude=.git \
    #       --exclude=.github \
    #       --include="dist/*" \
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: github-pages
    #     path: ${{ runner.temp }}/artifact.tar
    #     if-no-files-found: error
    - name: Setup Pages
      uses: actions/configure-pages@v4
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload dist folder
        path: './dist'

  deploy:
    # Chờ "build" xong mới chạy "deploy"
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    
    # Allow one concurrent deployment
    concurrency:
      group: 'pages'
      cancel-in-progress: true

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4